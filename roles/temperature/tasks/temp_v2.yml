---
- name: Install go
  package:
    state: present
    name:
    - "python-flask"
    - "go"
  tags:
  - temp

- name: Get temperx
  command: go get github.com/mreymann/temperx
  tags:
  - temp

- name: Install temperx
  command: go install github.com/mreymann/temperx
  tags:
  - temp

- name: Create the python script
  copy:
    content: |
      #!/usr/bin/env python3
      from flask import Flask
      import subprocess
      import sys
      import time
      from threading import Thread
      
      app = Flask(__name__)
      
      global NAME
      NAME="{{ temp_location }}"
      
      global temp
      temp="0.0"
      
      def updater():
          while True:
              update_temp()
              time.sleep(1)
      
      def update_temp():
          global temp
          p = subprocess.Popen(['/root/go/bin/temperx'], stdout=subprocess.PIPE)
          out, err = p.communicate()
          decoded = out.decode('utf-8')
          if len(decoded) > 1:
              temp=str(decoded.split(',')[0].split()[1])
      
      @app.route('/metrics')
      def get_temp():
          global temp
          global NAME
          return "custom_temperature{location=\""+NAME+"\"} "+temp

      @app.route('/simple')
      def get_simple_temp():
          global temp
          return temp
      
      if __name__ == '__main__':
          t = Thread(target=updater)
          update_temp()
          t.start()
          app.run(debug=False, port=9101, host="0.0.0.0")
    dest: /opt/temp.py
    mode: 0755
    owner: root
    group: root
  notify:
  - restart temp
  tags:
  - temp

- name: Create the systemd service
  copy:
    content: |
      [Unit]
      Description=Custom Temperature sensor
      After=network.target

      [Service]
      Type=simple
      WorkingDirectory=/root
      ExecStart=/opt/temp.py
      Restart=always

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/temp.service
    mode: 0644
    owner: root
    group: root
  notify:
  - reload systemd
  - restart temp
  tags:
  - temp

- name: Start and enable the temp service
  service:
    name: temp
    state: started
    enabled: yes
  tags:
  - temp
