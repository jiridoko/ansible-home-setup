---
- name: Install Samba Arch
  package:
    state: present
    name:
    - "samba"
  when: ansible_distribution == "Archlinux"
  tags:
  - share

- name: Install Samba Debian
  package:
    state: present
    name:
    - "samba"
    - "samba-common-bin"
  when: ansible_facts['os_family'] == "Debian"
  tags:
  - share

- name: Create share directories
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ item.mode | default('777') }}"
    owner: "{{ item.owner | default('jiri') }}"
    group: "{{ item.group | default('jiri') }}"
  loop: "{{ samba.shares }}"
  tags:
  - share

- name: Create log directory
  file:
    state: directory
    path: "{{ samba.log_dir }}"
    mode: 0755
    owner: jiri
    group: jiri
  tags:
  - share

- name: Set Samba config
  template:
    src: samba.j2
    dest: /etc/samba/smb.conf
  notify: restart samba
  tags:
  - share

- name: Set Samba PAM
  copy:
    content: |
      auth requisite pam_nologin.so
      auth require pam_unix.so
    dest: /etc/pam.d/samba
  notify: restart samba
  tags:
  - share

- name: Create/update Samba users with the passwords
  shell: >
    (echo '{{ item.password }}'; echo '{{ item.password }}') \
    | smbpasswd -s -a {{ item.name }}
  with_items: "{{ samba_users }}"
  no_log: true
  become_user: root
  tags:
  - share

- name: Start and enable samba Arch
  service:
    name: smb
    state: started
    enabled: yes
  when: ansible_distribution == "Archlinux"
  tags:
  - share

- name: Start and enable samba Debian
  service:
    name: smbd
    state: started
    enabled: yes
  when: ansible_facts['os_family'] == "Debian"
  tags:
  - share

- name: Start and enable nmb Arch
  service:
    name: nmb
    state: started
    enabled: yes
  when: ansible_distribution == "Archlinux"
  tags:
  - share

- name: Start and enable nmb Debian
  service:
    name: nmbd
    state: started
    enabled: yes
  when: ansible_facts['os_family'] == "Debian"
  tags:
  - share
